/* https://github.com/mitranim/sb */

/* Whitespace */

*, ::before, ::after {box-sizing: border-box}
* {margin: 0; padding: 0}

/* Typography */

* {
  font-family: inherit;
  font-weight: inherit;
  font-size: inherit;
  text-transform: inherit;
}

b, strong {font-weight: bolder}
html {font-family: sans-serif}
code, key, pre {font-family: monospace}
h1, h2, h3, h4, h5, h6 {font-size: inherit}

/* Cursors */

html {cursor: default}

/* button */

button {
  cursor: pointer;
  border: none;
  color: inherit;
  background-color: inherit;
  border-radius: 0;
  text-align: unset;
}

button > * {vertical-align: middle}

[role=button], [role=link] {cursor: pointer}

/* Inputs */

input, textarea {
  border: none;
  color: inherit;
  background-color: inherit;
}

textarea {resize: none}

::placeholder {
  color: currentColor;
  opacity: 0.5;
}

form, input, textarea, button, select, option {
  text-decoration: inherit; /* FF */
}

input[type=checkbox],
input[type=radio],
input[type=select],
input[type=file] {
  cursor: pointer;
}

/*
In Chrome (version 63 and possibly others), radio inputs shrink, while other
inputs don't.
*/
input[type=radio] {
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

input[type=number]::-webkit-inner-spin-button {-webkit-appearance: none}
input[type=number]::-webkit-outer-spin-button {-webkit-appearance: none}
input[type=number] {-moz-appearance: none}

select {cursor: pointer}

/* hr */

hr {
  align-self: stretch;
  margin: 0;
  border: none;
}

/* Anchors */

/* The user is responsible for sensible anchor decorations. */
a {
  text-decoration: none;
  color: inherit;
}

:any-link {cursor: pointer}

/* Lists */

ul {list-style-type: disc}

/* Monospace */

pre {white-space: pre-wrap}

/* Table */

/* Blink centers "th" by default. */
th {text-align: initial}

/* Misc */

/*
This rule is built into user agent stylesheets, but with low specificity. We
redefine it with higher specificity to allow it to take priority over CSS
classes that define the `display` property. The additional `:not` raises the
specificity over any regular class or attribute. We also provide the mixin
`dis-hidden` for CSS components that need a copy of this rule with an even
higher specificity.
*/
[hidden]:not(:root) {display: none}

[disabled] {cursor: not-allowed}
img {max-width: 100%}
details > summary {cursor: pointer}
details > summary * {display: inline}
fieldset {border-style: none}
dialog {border-style: none}
